{"version":3,"file":"static/js/748.e7e3b2ee.chunk.js","mappings":"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","sources":["components/button/button.component.tsx","components/button/button.styles.ts","components/checkout-item/checkout-item.component.jsx","components/payment-form/payment-form.styles.js","components/payment-form/payment-form.component.jsx","routes/checkout/checkout.component.jsx","store/cart/cart.action.ts","store/cart/cart.selector.ts"],"sourcesContent":["import { FC, ReactNode, ButtonHTMLAttributes } from 'react';\n\nimport {\n  BaseButton,\n  GoogleSignInButton,\n  InvertedButton,\n} from './button.styles';\n\nexport enum BUTTON_TYPE_CLASSES {\n  base = 'base',\n  google = 'google-sign-in',\n  inverted = 'inverted',\n};\n\ntype ButtonComponent = typeof BaseButton | typeof GoogleSignInButton | typeof InvertedButton;\n\nconst getButton = (buttonType = BUTTON_TYPE_CLASSES.base): ButtonComponent =>\n  ({\n    [BUTTON_TYPE_CLASSES.base]: BaseButton,\n    [BUTTON_TYPE_CLASSES.google]: GoogleSignInButton,\n    [BUTTON_TYPE_CLASSES.inverted]: InvertedButton,\n  }[buttonType]);\n\n  export type ButtonProps = {\n    buttonType?: BUTTON_TYPE_CLASSES;\n    children?: ReactNode;\n  } & ButtonHTMLAttributes<HTMLButtonElement>;\n\n\nconst Button: FC<ButtonProps> = ({ children, buttonType, ...otherProps }) => {\n  const CustomButton = getButton(buttonType);\n  return <CustomButton {...otherProps}>{children}</CustomButton>;\n};\n\nexport default Button;\n","import styled from 'styled-components';\n\nexport const BaseButton = styled.button`\n  min-width: 165px;\n  width: auto;\n  height: 50px;\n  letter-spacing: 0.5px;\n  line-height: 50px;\n  padding: 0 35px 0 35px;\n  font-size: 15px;\n  background-color: black;\n  color: white;\n  text-transform: uppercase;\n  font-family: 'Open Sans';\n  font-weight: bold;\n  border: none;\n  cursor: pointer;\n  display: flex;\n  justify-content: center;\n\n  &:hover {\n    background-color: white;\n    color: black;\n    border: 1px solid black;\n  }\n`;\n\nexport const GoogleSignInButton = styled(BaseButton)`\n  background-color: #4285f4;\n  color: white;\n\n  &:hover {\n    background-color: #357ae8;\n    border: none;\n  }\n`;\n\nexport const InvertedButton = styled(BaseButton)`\n  background-color: white;\n  color: black;\n  border: 1px solid black;\n\n  &:hover {\n    background-color: black;\n    color: white;\n    border: none;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport {\n  clearItemFromCart,\n  addItemToCart,\n  removeItemFromCart,\n} from '../../store/cart/cart.action';\nimport { selectCartItems } from '../../store/cart/cart.selector';\n\nimport './checkout-item.styles.scss';\n\nconst CheckoutItem = ({ cartItem }) => {\n  const { name, imageUrl, price, quantity } = cartItem;\n\n  const dispatch = useDispatch();\n  const cartItems = useSelector(selectCartItems);\n  const clearItemHandler = () =>\n    dispatch(clearItemFromCart(cartItems, cartItem));\n  const addItemHandler = () => dispatch(addItemToCart(cartItems, cartItem));\n  const removeItemHandler = () =>\n    dispatch(removeItemFromCart(cartItems, cartItem));\n\n  return (\n    <div className=\"checkout-item-container\">\n      <div className=\"image-container\">\n        <img src={imageUrl} alt={`${name}`} />\n      </div>\n      <span className=\"name\"> {name} </span>\n      <span className=\"quantity\">\n        <div className=\"arrow\" onClick={removeItemHandler}>\n          &#10094;\n        </div>\n        <span className=\"value\">{quantity}</span>\n        <div className=\"arrow\" onClick={addItemHandler}>\n          &#10095;\n        </div>\n      </span>\n      <span className=\"price\"> {price}</span>\n      <div className=\"remove-button\" onClick={clearItemHandler}>\n        &#10005;\n      </div>\n    </div>\n  );\n};\n\nexport default CheckoutItem;\n","import styled from 'styled-components';\n\nexport const PaymentFormContainer = styled.div`\n  height: 300px;\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n`;\n\nexport const FormContainer = styled.form`\n  height: 100px;\n  min-width: 500px;\n`;\n","import { CardElement, useStripe, useElements } from '@stripe/react-stripe-js';\nimport Button, { BUTTON_TYPE_CLASSES } from '../button/button.component';\n\nimport { PaymentFormContainer, FormContainer } from './payment-form.styles';\n\nconst PaymentForm = () => {\n  const stripe = useStripe();\n  const elements = useElements();\n\n  const paymentHandler = async (e) => {\n    e.preventDefault();\n\n    if (!stripe || !elements) return;\n\n    const response = await fetch('/.netlify/functions/create-payment-intent', {\n      method: 'post',\n      headers: {\n        'Content-Type': 'application/json',\n      },\n      body: JSON.stringify({ amount: 10000 }),\n    }).then((res) => res.json());\n\n    console.log(response);\n  };\n  return (\n    <PaymentFormContainer>\n      <FormContainer onSubmit={paymentHandler}>\n        <h2>Credit Card Payment: </h2>\n        <CardElement />\n        <Button buttonType={BUTTON_TYPE_CLASSES.inverted}>Pay Now</Button>\n      </FormContainer>\n    </PaymentFormContainer>\n  );\n};\n\nexport default PaymentForm;\n","import { useSelector } from 'react-redux';\nimport {\n  selectCartItems,\n  selectCartTotal,\n} from '../../store/cart/cart.selector';\nimport CheckoutItem from '../../components/checkout-item/checkout-item.component';\nimport PaymentForm from '../../components/payment-form/payment-form.component';\n\nimport './checkout.styles.scss';\n\nconst Checkout = () => {\n  const cartItems = useSelector(selectCartItems);\n  const cartTotal = useSelector(selectCartTotal);\n\n  return (\n    <div className=\"checkout-container\">\n      <div className=\"checkout-header\">\n        <div className=\"header-block\">\n          <span>Product</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Description</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Quantity</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Price</span>\n        </div>\n        <div className=\"header-block\">\n          <span>Remove</span>\n        </div>\n      </div>\n      {cartItems.map((cartItem) => {\n        return <CheckoutItem key={cartItem.id} cartItem={cartItem} />;\n      })}\n      <div className=\"total\">TOTAL: ${cartTotal}</div>\n      <PaymentForm />\n    </div>\n  );\n};\n\nexport default Checkout;\n","import { CategoryItem } from '../categories/category.types';\nimport { CART_ACTION_TYPES, CartItem } from './cart.types';\nimport {\n  createAction,\n  ActionWithPayload,\n} from '../../utils/reducer/reducer.utils';\n\nconst addCartItem = (\n  cartItems: CartItem[],\n  productToAdd: CategoryItem\n): CartItem[] => {\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === productToAdd.id\n  );\n\n  if (existingCartItem) {\n    return cartItems.map((cartItem) =>\n      cartItem.id === productToAdd.id\n        ? { ...cartItem, quantity: cartItem.quantity + 1 }\n        : cartItem\n    );\n  }\n\n  return [...cartItems, { ...productToAdd, quantity: 1 }];\n};\n\nconst removeCartItem = (\n  cartItems: CartItem[],\n  cartItemToRemove: CartItem\n): CartItem[] => {\n  // find the cart item to remove\n  const existingCartItem = cartItems.find(\n    (cartItem) => cartItem.id === cartItemToRemove.id\n  );\n\n  // check if quantity is equal to 1, if it is remove that item from the cart\n  if (existingCartItem?.quantity === 1) {\n    return cartItems.filter((cartItem) => cartItem.id !== cartItemToRemove.id);\n  }\n\n  // return back cartitems with matching cart item with reduced quantity\n  return cartItems.map((cartItem) =>\n    cartItem.id === cartItemToRemove.id\n      ? { ...cartItem, quantity: cartItem.quantity - 1 }\n      : cartItem\n  );\n};\n\nconst clearCartItem = (\n  cartItems: CartItem[],\n  cartItemToClear: CartItem\n): CartItem[] =>\n  cartItems.filter((cartItem) => cartItem.id !== cartItemToClear.id);\n\nexport type SetIsCartOpen = ActionWithPayload<\n  CART_ACTION_TYPES.SET_IS_CART_OPEN,\n  boolean\n>;\nexport type SetCartItems = ActionWithPayload<\n  CART_ACTION_TYPES.SET_CART_ITEMS,\n  CartItem[]\n>;\n\nexport const addItemToCart = (\n  cartItems: CartItem[],\n  productToAdd: CategoryItem\n) => {\n  const newCartItems = addCartItem(cartItems, productToAdd);\n\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\n\nexport const removeItemFromCart = (\n  cartItems: CartItem[],\n  cartItemToRemove: CartItem\n) => {\n  const newCartItems = removeCartItem(cartItems, cartItemToRemove);\n\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\n\nexport const clearItemFromCart = (\n  cartItems: CartItem[],\n  cartItemToClear: CartItem\n) => {\n  const newCartItems = clearCartItem(cartItems, cartItemToClear);\n\n  return createAction(CART_ACTION_TYPES.SET_CART_ITEMS, newCartItems);\n};\n\nexport const setIsCartOpen = (boolean: boolean): SetIsCartOpen =>\n  createAction(CART_ACTION_TYPES.SET_IS_CART_OPEN, boolean);\n","import { createSelector } from 'reselect';\nimport { CartState } from './cart.reducer';\nimport { RootState } from '../store';\n\nconst selectCartReducer = (state: RootState): CartState => state.cart;\n\nexport const selectIsCartOpen = createSelector(\n  [selectCartReducer],\n  (cart) => cart.isCartOpen\n);\n\nexport const selectCartItems = createSelector(\n  [selectCartReducer],\n  (cart) => cart.cartItems\n);\n\nexport const selectCartTotal = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce(\n    (total, cartItem) => total + cartItem.quantity * cartItem.price,\n    0\n  )\n);\n\nexport const selectCartCount = createSelector([selectCartItems], (cartItems) =>\n  cartItems.reduce((total, cartItem) => total + cartItem.quantity, 0)\n);\n"],"names":["BUTTON_TYPE_CLASSES","_ref","children","buttonType","otherProps","CustomButton","arguments","length","undefined","base","BaseButton","google","GoogleSignInButton","inverted","InvertedButton","getButton","_jsx","styled","button","_templateObject","_taggedTemplateLiteral","_templateObject2","_templateObject3","cartItem","name","imageUrl","price","quantity","dispatch","useDispatch","cartItems","useSelector","selectCartItems","_jsxs","className","src","alt","concat","onClick","removeItemHandler","removeItemFromCart","addItemHandler","addItemToCart","clearItemHandler","clearItemFromCart","PaymentFormContainer","div","FormContainer","form","PaymentForm","stripe","useStripe","elements","useElements","onSubmit","async","e","preventDefault","response","fetch","method","headers","body","JSON","stringify","amount","then","res","json","console","log","CardElement","Button","Checkout","cartTotal","selectCartTotal","map","CheckoutItem","id","productToAdd","newCartItems","addCartItem","find","createAction","CART_ACTION_TYPES","SET_CART_ITEMS","cartItemToRemove","removeCartItem","existingCartItem","filter","cartItemToClear","clearCartItem","setIsCartOpen","boolean","SET_IS_CART_OPEN","selectCartReducer","state","cart","selectIsCartOpen","createSelector","isCartOpen","reduce","total","selectCartCount"],"sourceRoot":""}